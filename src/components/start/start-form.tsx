/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/3Ea4J6ROeFX
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useMutation, useQuery } from "convex/react"
import { useEffect, useState } from "react"
import { api } from "../../../convex/_generated/api"
import { Id } from "../../../convex/_generated/dataModel"
import { useRouter } from "next/navigation"

export function StartForm() {
  const [jobDescription, setJobDescription] = useState("")
  const [isGenerating, setIsGenerating] = useState(false)
  const [runId, setRunId] = useState<Id<"runs"> | undefined>(undefined)
  const run = useQuery(api.runs.fetchRun, { runId: runId })
  const startRun = useMutation(api.runs.startReport)
  const router = useRouter()

  useEffect(() => {
    console.log(run)
    if (run && run.status === "ready") {
      setIsGenerating(false)
      router.push(`/intraview/${run._id}`)
    }
  }, [run])

  const handleGenerateQuestions = async () => {
    setIsGenerating(true)
    const runId = await startRun({ jobDescription })
    setRunId(runId)
    // setTimeout(() => {
    //   setIsGenerating(false)
    // }, 2000)
  }
  return (
    <div className="flex flex-col h-[calc(100dvh-65px)] w-full py-8 md:py-12">
      <div>
        <h1 className="text-3xl font-bold mb-4 text-center">
          Let's get you started.
        </h1>
        <p className="text-gray-300 mb-6 text-center">
          Enter the job description of the job you're applying for.
        </p>
      </div>
      <textarea
        className="flex-grow w-full p-4 rounded-md bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4"
        placeholder="Enter job description..."
        value={jobDescription}
        onChange={(e) => setJobDescription(e.target.value)}
      />
      <button
        className="w-full py-3 px-6 rounded-md bg-blue-500 text-white font-semibold hover:bg-blue-600 transition-colors duration-300 flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed"
        onClick={handleGenerateQuestions}
        // disabled={isGenerating || jobDescription.trim() === ""}
      >
        {isGenerating ? (
          <>
            <span className="animate-spin">
              <LoaderIcon className="w-5 h-5 mr-2" />
            </span>
            Generating...
          </>
        ) : (
          "Start my Intraview"
        )}
      </button>
    </div>
  )
}

function LoaderIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 2v4" />
      <path d="m16.2 7.8 2.9-2.9" />
      <path d="M18 12h4" />
      <path d="m16.2 16.2 2.9 2.9" />
      <path d="M12 18v4" />
      <path d="m4.9 19.1 2.9-2.9" />
      <path d="M2 12h4" />
      <path d="m4.9 4.9 2.9 2.9" />
    </svg>
  )
}
